*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZCAWF_VM_ACTAPPL................................*
FORM GET_DATA_ZCAWF_VM_ACTAPPL.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCAWF_ACTVAPPL WHERE
(VIM_WHERETAB) .
    CLEAR ZCAWF_VM_ACTAPPL .
ZCAWF_VM_ACTAPPL-OBJECT =
ZCAWF_ACTVAPPL-OBJECT .
ZCAWF_VM_ACTAPPL-SUBOBJECT =
ZCAWF_ACTVAPPL-SUBOBJECT .
ZCAWF_VM_ACTAPPL-IS_ACTIVE =
ZCAWF_ACTVAPPL-IS_ACTIVE .
    SELECT SINGLE * FROM BALOBJ WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM BALOBJT WHERE
OBJECT = BALOBJ-OBJECT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCAWF_VM_ACTAPPL-OBJTXT =
BALOBJT-OBJTXT .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM BALSUB WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT AND
SUBOBJECT = ZCAWF_ACTVAPPL-SUBOBJECT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM BALSUBT WHERE
OBJECT = BALSUB-OBJECT AND
SUBOBJECT = BALSUB-SUBOBJECT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCAWF_VM_ACTAPPL-SUBOBJTXT =
BALSUBT-SUBOBJTXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZCAWF_VM_ACTAPPL.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCAWF_VM_ACTAPPL .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCAWF_VM_ACTAPPL.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCAWF_VM_ACTAPPL-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCAWF_ACTVAPPL WHERE
  OBJECT = ZCAWF_VM_ACTAPPL-OBJECT AND
  SUBOBJECT = ZCAWF_VM_ACTAPPL-SUBOBJECT .
    IF SY-SUBRC = 0.
    DELETE ZCAWF_ACTVAPPL .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCAWF_ACTVAPPL WHERE
  OBJECT = ZCAWF_VM_ACTAPPL-OBJECT AND
  SUBOBJECT = ZCAWF_VM_ACTAPPL-SUBOBJECT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCAWF_ACTVAPPL.
    ENDIF.
ZCAWF_ACTVAPPL-OBJECT =
ZCAWF_VM_ACTAPPL-OBJECT .
ZCAWF_ACTVAPPL-SUBOBJECT =
ZCAWF_VM_ACTAPPL-SUBOBJECT .
ZCAWF_ACTVAPPL-IS_ACTIVE =
ZCAWF_VM_ACTAPPL-IS_ACTIVE .
    IF SY-SUBRC = 0.
    UPDATE ZCAWF_ACTVAPPL ##WARN_OK.
    ELSE.
    INSERT ZCAWF_ACTVAPPL .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCAWF_VM_ACTAPPL-UPD_FLAG,
STATUS_ZCAWF_VM_ACTAPPL-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZCAWF_VM_ACTAPPL.
  SELECT SINGLE * FROM ZCAWF_ACTVAPPL WHERE
OBJECT = ZCAWF_VM_ACTAPPL-OBJECT AND
SUBOBJECT = ZCAWF_VM_ACTAPPL-SUBOBJECT .
ZCAWF_VM_ACTAPPL-OBJECT =
ZCAWF_ACTVAPPL-OBJECT .
ZCAWF_VM_ACTAPPL-SUBOBJECT =
ZCAWF_ACTVAPPL-SUBOBJECT .
ZCAWF_VM_ACTAPPL-IS_ACTIVE =
ZCAWF_ACTVAPPL-IS_ACTIVE .
    SELECT SINGLE * FROM BALOBJ WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM BALOBJT WHERE
OBJECT = BALOBJ-OBJECT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCAWF_VM_ACTAPPL-OBJTXT =
BALOBJT-OBJTXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_ACTAPPL-OBJTXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCAWF_VM_ACTAPPL-OBJTXT .
    ENDIF.
    SELECT SINGLE * FROM BALSUB WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT AND
SUBOBJECT = ZCAWF_ACTVAPPL-SUBOBJECT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM BALSUBT WHERE
OBJECT = BALSUB-OBJECT AND
SUBOBJECT = BALSUB-SUBOBJECT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCAWF_VM_ACTAPPL-SUBOBJTXT =
BALSUBT-SUBOBJTXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_ACTAPPL-SUBOBJTXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCAWF_VM_ACTAPPL-SUBOBJTXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCAWF_VM_ACTAPPL USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCAWF_VM_ACTAPPL-OBJECT TO
ZCAWF_ACTVAPPL-OBJECT .
MOVE ZCAWF_VM_ACTAPPL-SUBOBJECT TO
ZCAWF_ACTVAPPL-SUBOBJECT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCAWF_ACTVAPPL'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCAWF_ACTVAPPL TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCAWF_ACTVAPPL'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCAWF_VM_ACTAPPL USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCAWF_ACTVAPPL-OBJECT =
ZCAWF_VM_ACTAPPL-OBJECT .
ZCAWF_ACTVAPPL-SUBOBJECT =
ZCAWF_VM_ACTAPPL-SUBOBJECT .
ZCAWF_ACTVAPPL-IS_ACTIVE =
ZCAWF_VM_ACTAPPL-IS_ACTIVE .
    SELECT SINGLE * FROM BALOBJ WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM BALOBJT WHERE
OBJECT = BALOBJ-OBJECT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCAWF_VM_ACTAPPL-OBJTXT =
BALOBJT-OBJTXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_ACTAPPL-OBJTXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCAWF_VM_ACTAPPL-OBJTXT .
    ENDIF.
    SELECT SINGLE * FROM BALSUB WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT AND
SUBOBJECT = ZCAWF_ACTVAPPL-SUBOBJECT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM BALSUBT WHERE
OBJECT = BALSUB-OBJECT AND
SUBOBJECT = BALSUB-SUBOBJECT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCAWF_VM_ACTAPPL-SUBOBJTXT =
BALSUBT-SUBOBJTXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_ACTAPPL-SUBOBJTXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCAWF_VM_ACTAPPL-SUBOBJTXT .
    ENDIF.
ENDFORM.
*...processing: ZCAWF_VM_WFSTA..................................*
FORM GET_DATA_ZCAWF_VM_WFSTA.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCAWF_STATUS WHERE
(VIM_WHERETAB) .
    CLEAR ZCAWF_VM_WFSTA .
ZCAWF_VM_WFSTA-OBJECT =
ZCAWF_STATUS-OBJECT .
ZCAWF_VM_WFSTA-SUBOBJECT =
ZCAWF_STATUS-SUBOBJECT .
ZCAWF_VM_WFSTA-WF_STATUS =
ZCAWF_STATUS-WF_STATUS .
    SELECT SINGLE * FROM ZCAWF_ACTVAPPL WHERE
OBJECT = ZCAWF_STATUS-OBJECT AND
SUBOBJECT = ZCAWF_STATUS-SUBOBJECT .
    IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-IS_ACTIVE =
ZCAWF_ACTVAPPL-IS_ACTIVE .
      SELECT SINGLE * FROM BALOBJ WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM BALOBJT WHERE
OBJECT = BALOBJ-OBJECT AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-OBJTXT =
BALOBJT-OBJTXT .
        ENDIF.
      ENDIF.
      SELECT SINGLE * FROM BALSUB WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT AND
SUBOBJECT = ZCAWF_ACTVAPPL-SUBOBJECT .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM BALSUBT WHERE
OBJECT = BALSUB-OBJECT AND
SUBOBJECT = BALSUB-SUBOBJECT AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-SUBOBJTXT =
BALSUBT-SUBOBJTXT .
        ENDIF.
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM ZCAWF_STATUSTX WHERE
OBJECT = ZCAWF_STATUS-OBJECT AND
SUBOBJECT = ZCAWF_STATUS-SUBOBJECT AND
WF_STATUS = ZCAWF_STATUS-WF_STATUS AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-DESCR_L =
ZCAWF_STATUSTX-DESCR_L .
ZCAWF_VM_WFSTA-DESCR_S =
ZCAWF_STATUSTX-DESCR_S .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCAWF_VM_WFSTA.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCAWF_VM_WFSTA .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCAWF_VM_WFSTA.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCAWF_VM_WFSTA-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCAWF_STATUS WHERE
  OBJECT = ZCAWF_VM_WFSTA-OBJECT AND
  SUBOBJECT = ZCAWF_VM_WFSTA-SUBOBJECT AND
  WF_STATUS = ZCAWF_VM_WFSTA-WF_STATUS .
    IF SY-SUBRC = 0.
    DELETE ZCAWF_STATUS .
    ENDIF.
    DELETE FROM ZCAWF_STATUSTX WHERE
    OBJECT = ZCAWF_STATUS-OBJECT AND
    SUBOBJECT = ZCAWF_STATUS-SUBOBJECT AND
    WF_STATUS = ZCAWF_STATUS-WF_STATUS .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCAWF_STATUS WHERE
  OBJECT = ZCAWF_VM_WFSTA-OBJECT AND
  SUBOBJECT = ZCAWF_VM_WFSTA-SUBOBJECT AND
  WF_STATUS = ZCAWF_VM_WFSTA-WF_STATUS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCAWF_STATUS.
    ENDIF.
ZCAWF_STATUS-OBJECT =
ZCAWF_VM_WFSTA-OBJECT .
ZCAWF_STATUS-SUBOBJECT =
ZCAWF_VM_WFSTA-SUBOBJECT .
ZCAWF_STATUS-WF_STATUS =
ZCAWF_VM_WFSTA-WF_STATUS .
    IF SY-SUBRC = 0.
    UPDATE ZCAWF_STATUS ##WARN_OK.
    ELSE.
    INSERT ZCAWF_STATUS .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCAWF_STATUSTX WHERE
    OBJECT = ZCAWF_STATUS-OBJECT AND
    SUBOBJECT = ZCAWF_STATUS-SUBOBJECT AND
    WF_STATUS = ZCAWF_STATUS-WF_STATUS AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCAWF_STATUSTX.
ZCAWF_STATUSTX-OBJECT =
ZCAWF_STATUS-OBJECT .
ZCAWF_STATUSTX-SUBOBJECT =
ZCAWF_STATUS-SUBOBJECT .
ZCAWF_STATUSTX-WF_STATUS =
ZCAWF_STATUS-WF_STATUS .
ZCAWF_STATUSTX-LANGU =
SY-LANGU .
      ENDIF.
ZCAWF_STATUSTX-DESCR_L =
ZCAWF_VM_WFSTA-DESCR_L .
ZCAWF_STATUSTX-DESCR_S =
ZCAWF_VM_WFSTA-DESCR_S .
    IF SY-SUBRC = 0.
    UPDATE ZCAWF_STATUSTX ##WARN_OK.
    ELSE.
    INSERT ZCAWF_STATUSTX .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCAWF_VM_WFSTA-UPD_FLAG,
STATUS_ZCAWF_VM_WFSTA-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZCAWF_VM_WFSTA.
  SELECT SINGLE * FROM ZCAWF_STATUS WHERE
OBJECT = ZCAWF_VM_WFSTA-OBJECT AND
SUBOBJECT = ZCAWF_VM_WFSTA-SUBOBJECT AND
WF_STATUS = ZCAWF_VM_WFSTA-WF_STATUS .
ZCAWF_VM_WFSTA-OBJECT =
ZCAWF_STATUS-OBJECT .
ZCAWF_VM_WFSTA-SUBOBJECT =
ZCAWF_STATUS-SUBOBJECT .
ZCAWF_VM_WFSTA-WF_STATUS =
ZCAWF_STATUS-WF_STATUS .
    SELECT SINGLE * FROM ZCAWF_ACTVAPPL WHERE
OBJECT = ZCAWF_STATUS-OBJECT AND
SUBOBJECT = ZCAWF_STATUS-SUBOBJECT .
    IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-IS_ACTIVE =
ZCAWF_ACTVAPPL-IS_ACTIVE .
      SELECT SINGLE * FROM BALOBJ WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM BALOBJT WHERE
OBJECT = BALOBJ-OBJECT AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-OBJTXT =
BALOBJT-OBJTXT .
        ELSE.
          CLEAR SY-SUBRC.
          CLEAR ZCAWF_VM_WFSTA-OBJTXT .
        ENDIF.
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_WFSTA-OBJTXT .
      ENDIF.
      SELECT SINGLE * FROM BALSUB WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT AND
SUBOBJECT = ZCAWF_ACTVAPPL-SUBOBJECT .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM BALSUBT WHERE
OBJECT = BALSUB-OBJECT AND
SUBOBJECT = BALSUB-SUBOBJECT AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-SUBOBJTXT =
BALSUBT-SUBOBJTXT .
        ELSE.
          CLEAR SY-SUBRC.
          CLEAR ZCAWF_VM_WFSTA-SUBOBJTXT .
        ENDIF.
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_WFSTA-SUBOBJTXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCAWF_VM_WFSTA-IS_ACTIVE .
      CLEAR ZCAWF_VM_WFSTA-OBJTXT .
      CLEAR ZCAWF_VM_WFSTA-SUBOBJTXT .
    ENDIF.
    SELECT SINGLE * FROM ZCAWF_STATUSTX WHERE
OBJECT = ZCAWF_STATUS-OBJECT AND
SUBOBJECT = ZCAWF_STATUS-SUBOBJECT AND
WF_STATUS = ZCAWF_STATUS-WF_STATUS AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-DESCR_L =
ZCAWF_STATUSTX-DESCR_L .
ZCAWF_VM_WFSTA-DESCR_S =
ZCAWF_STATUSTX-DESCR_S .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCAWF_VM_WFSTA-DESCR_L .
      CLEAR ZCAWF_VM_WFSTA-DESCR_S .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCAWF_VM_WFSTA USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCAWF_VM_WFSTA-OBJECT TO
ZCAWF_STATUS-OBJECT .
MOVE ZCAWF_VM_WFSTA-SUBOBJECT TO
ZCAWF_STATUS-SUBOBJECT .
MOVE ZCAWF_VM_WFSTA-WF_STATUS TO
ZCAWF_STATUS-WF_STATUS .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCAWF_STATUS'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCAWF_STATUS TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCAWF_STATUS'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCAWF_STATUS-OBJECT TO
ZCAWF_STATUSTX-OBJECT .
MOVE ZCAWF_STATUS-SUBOBJECT TO
ZCAWF_STATUSTX-SUBOBJECT .
MOVE ZCAWF_STATUS-WF_STATUS TO
ZCAWF_STATUSTX-WF_STATUS .
MOVE SY-LANGU TO
ZCAWF_STATUSTX-LANGU .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCAWF_STATUSTX'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCAWF_STATUSTX TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCAWF_STATUSTX'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCAWF_VM_WFSTA USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCAWF_STATUS-OBJECT =
ZCAWF_VM_WFSTA-OBJECT .
ZCAWF_STATUS-SUBOBJECT =
ZCAWF_VM_WFSTA-SUBOBJECT .
ZCAWF_STATUS-WF_STATUS =
ZCAWF_VM_WFSTA-WF_STATUS .
    SELECT SINGLE * FROM ZCAWF_ACTVAPPL WHERE
OBJECT = ZCAWF_STATUS-OBJECT AND
SUBOBJECT = ZCAWF_STATUS-SUBOBJECT .
    IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-IS_ACTIVE =
ZCAWF_ACTVAPPL-IS_ACTIVE .
      SELECT SINGLE * FROM BALOBJ WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM BALOBJT WHERE
OBJECT = BALOBJ-OBJECT AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-OBJTXT =
BALOBJT-OBJTXT .
        ELSE.
          CLEAR SY-SUBRC.
          CLEAR ZCAWF_VM_WFSTA-OBJTXT .
        ENDIF.
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_WFSTA-OBJTXT .
      ENDIF.
      SELECT SINGLE * FROM BALSUB WHERE
OBJECT = ZCAWF_ACTVAPPL-OBJECT AND
SUBOBJECT = ZCAWF_ACTVAPPL-SUBOBJECT .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM BALSUBT WHERE
OBJECT = BALSUB-OBJECT AND
SUBOBJECT = BALSUB-SUBOBJECT AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCAWF_VM_WFSTA-SUBOBJTXT =
BALSUBT-SUBOBJTXT .
        ELSE.
          CLEAR SY-SUBRC.
          CLEAR ZCAWF_VM_WFSTA-SUBOBJTXT .
        ENDIF.
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCAWF_VM_WFSTA-SUBOBJTXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCAWF_VM_WFSTA-IS_ACTIVE .
      CLEAR ZCAWF_VM_WFSTA-OBJTXT .
      CLEAR ZCAWF_VM_WFSTA-SUBOBJTXT .
    ENDIF.
ENDFORM.
